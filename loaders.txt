[ { test: /\.vue$/,
    loader: 'vue-loader',
    options:
     { postcss:
        { useConfigFile: false,
          sourceMap: true,
          plugins:
           [ { [Function] postcssPlugin: 'postcss-import', postcssVersion: '6.0.22' },
             { [Function] postcssPlugin: 'postcss-url', postcssVersion: '6.0.22' },
             Processor {
               version: '6.0.22',
               plugins: [Array],
               postcssPlugin: 'postcss-cssnext',
               postcssVersion: '6.0.22' } ] },
       extractCSS: false,
       cssSourceMap: true,
       preserveWhitespace: false,
       loaders:
        { js:
           { loader: 'babel-loader',
             options: { babelrc: false, cacheDirectory: true, presets: [Array] } },
          css:
           [ { loader: 'vue-style-loader', options: [Object] },
             { loader: 'css-loader', options: [Object] } ],
          less:
           [ { loader: 'vue-style-loader', options: [Object] },
             { loader: 'css-loader', options: [Object] },
             { options: [Object], loader: 'less-loader' } ],
          scss:
           [ { loader: 'vue-style-loader', options: [Object] },
             { loader: 'css-loader', options: [Object] },
             { options: [Object], loader: 'sass-loader' } ],
          sass:
           [ { loader: 'vue-style-loader', options: [Object] },
             { loader: 'css-loader', options: [Object] },
             { options: [Object], loader: 'sass-loader' } ],
          stylus:
           [ { loader: 'vue-style-loader', options: [Object] },
             { loader: 'css-loader', options: [Object] },
             { options: [Object], loader: 'stylus-loader' } ],
          styl:
           [ { loader: 'vue-style-loader', options: [Object] },
             { loader: 'css-loader', options: [Object] },
             { options: [Object], loader: 'stylus-loader' } ] },
       template: { doctype: 'html' },
       transformToRequire: { video: 'src', source: 'src', object: 'src', embed: 'src' } } },
  { test: /\.jsx?$/,
    loader: 'babel-loader',
    exclude: /node_modules/,
    options:
     { babelrc: false,
       cacheDirectory: true,
       presets:
        [ [ '/Users/tony/Documents/Github/website/node_modules/babel-preset-vue-app/dist/index.common.js',
            { targets: [Object] } ] ] } },
  { test: /\.css$/,
    use:
     [ { loader: 'vue-style-loader', options: { sourceMap: true } },
       { loader: 'css-loader',
         options:
          { sourceMap: true,
            minimize: false,
            importLoaders: 1,
            alias:
             { '/assets': '/Users/tony/Documents/Github/website/assets',
               '/static': '/Users/tony/Documents/Github/website/static' } } },
       { loader: 'postcss-loader',
         options:
          { sourceMap: true,
            useConfigFile: false,
            plugins: [ [Function], [Function], [Processor] ] } } ] },
  { test: /\.less$/,
    use:
     [ { loader: 'vue-style-loader', options: { sourceMap: true } },
       { loader: 'css-loader',
         options:
          { sourceMap: true,
            minimize: false,
            importLoaders: 2,
            alias:
             { '/assets': '/Users/tony/Documents/Github/website/assets',
               '/static': '/Users/tony/Documents/Github/website/static' } } },
       { loader: 'postcss-loader',
         options:
          { sourceMap: true,
            useConfigFile: false,
            plugins: [ [Function], [Function], [Processor] ] } },
       { options: { sourceMap: true }, loader: 'less-loader' } ] },
  { test: /\.sass$/,
    use:
     [ { loader: 'vue-style-loader', options: { sourceMap: true } },
       { loader: 'css-loader',
         options:
          { sourceMap: true,
            minimize: false,
            importLoaders: 2,
            alias:
             { '/assets': '/Users/tony/Documents/Github/website/assets',
               '/static': '/Users/tony/Documents/Github/website/static' } } },
       { loader: 'postcss-loader',
         options:
          { sourceMap: true,
            useConfigFile: false,
            plugins: [ [Function], [Function], [Processor] ] } },
       { options: { indentedSyntax: true }, loader: 'sass-loader' } ] },
  { test: /\.scss$/,
    use:
     [ { loader: 'vue-style-loader', options: { sourceMap: true } },
       { loader: 'css-loader',
         options:
          { sourceMap: true,
            minimize: false,
            importLoaders: 2,
            alias:
             { '/assets': '/Users/tony/Documents/Github/website/assets',
               '/static': '/Users/tony/Documents/Github/website/static' } } },
       { loader: 'postcss-loader',
         options:
          { sourceMap: true,
            useConfigFile: false,
            plugins: [ [Function], [Function], [Processor] ] } },
       { options: { sourceMap: true }, loader: 'sass-loader' } ] },
  { test: /\.styl(us)?$/,
    use:
     [ { loader: 'vue-style-loader', options: { sourceMap: true } },
       { loader: 'css-loader',
         options:
          { sourceMap: true,
            minimize: false,
            importLoaders: 2,
            alias:
             { '/assets': '/Users/tony/Documents/Github/website/assets',
               '/static': '/Users/tony/Documents/Github/website/static' } } },
       { loader: 'postcss-loader',
         options:
          { sourceMap: true,
            useConfigFile: false,
            plugins: [ [Function], [Function], [Processor] ] } },
       { options: { sourceMap: true }, loader: 'stylus-loader' } ] },
  { test: /\.(png|jpe?g|gif|svg)$/,
    loader: 'url-loader',
    options: { limit: 1000, name: 'img/[name].[hash:7].[ext]' } },
  { test: /\.(woff2?|eot|ttf|otf)(\?.*)?$/,
    loader: 'url-loader',
    options: { limit: 1000, name: 'fonts/[name].[hash:7].[ext]' } },
  { test: /\.(webm|mp4)$/,
    loader: 'file-loader',
    options: { name: 'videos/[name].[hash:7].[ext]' } } ]
[ { test: /\.vue$/,
    loader: 'vue-loader',
    options:
     { postcss:
        { useConfigFile: false,
          sourceMap: true,
          plugins:
           [ { [Function] postcssPlugin: 'postcss-import', postcssVersion: '6.0.22' },
             { [Function] postcssPlugin: 'postcss-url', postcssVersion: '6.0.22' },
             Processor {
               version: '6.0.22',
               plugins: [Array],
               postcssPlugin: 'postcss-cssnext',
               postcssVersion: '6.0.22' } ] },
       extractCSS: false,
       cssSourceMap: true,
       preserveWhitespace: false,
       loaders:
        { js:
           { loader: 'babel-loader',
             options: { babelrc: false, cacheDirectory: true, presets: [Array] } },
          css:
           [ { loader: 'vue-style-loader', options: [Object] },
             { loader: 'css-loader', options: [Object] } ],
          less:
           [ { loader: 'vue-style-loader', options: [Object] },
             { loader: 'css-loader', options: [Object] },
             { options: [Object], loader: 'less-loader' } ],
          scss:
           [ { loader: 'vue-style-loader', options: [Object] },
             { loader: 'css-loader', options: [Object] },
             { options: [Object], loader: 'sass-loader' } ],
          sass:
           [ { loader: 'vue-style-loader', options: [Object] },
             { loader: 'css-loader', options: [Object] },
             { options: [Object], loader: 'sass-loader' } ],
          stylus:
           [ { loader: 'vue-style-loader', options: [Object] },
             { loader: 'css-loader', options: [Object] },
             { options: [Object], loader: 'stylus-loader' } ],
          styl:
           [ { loader: 'vue-style-loader', options: [Object] },
             { loader: 'css-loader', options: [Object] },
             { options: [Object], loader: 'stylus-loader' } ] },
       template: { doctype: 'html' },
       transformToRequire: { video: 'src', source: 'src', object: 'src', embed: 'src' } } },
  { test: /\.jsx?$/,
    loader: 'babel-loader',
    exclude: /node_modules/,
    options:
     { babelrc: false,
       cacheDirectory: true,
       presets:
        [ [ '/Users/tony/Documents/Github/website/node_modules/babel-preset-vue-app/dist/index.common.js',
            { targets: [Object] } ] ] } },
  { test: /\.css$/,
    use:
     [ { loader: 'vue-style-loader', options: { sourceMap: true } },
       { loader: 'css-loader',
         options:
          { sourceMap: true,
            minimize: false,
            importLoaders: 1,
            alias:
             { '/assets': '/Users/tony/Documents/Github/website/assets',
               '/static': '/Users/tony/Documents/Github/website/static' } } },
       { loader: 'postcss-loader',
         options:
          { sourceMap: true,
            useConfigFile: false,
            plugins: [ [Function], [Function], [Processor] ] } } ] },
  { test: /\.less$/,
    use:
     [ { loader: 'vue-style-loader', options: { sourceMap: true } },
       { loader: 'css-loader',
         options:
          { sourceMap: true,
            minimize: false,
            importLoaders: 2,
            alias:
             { '/assets': '/Users/tony/Documents/Github/website/assets',
               '/static': '/Users/tony/Documents/Github/website/static' } } },
       { loader: 'postcss-loader',
         options:
          { sourceMap: true,
            useConfigFile: false,
            plugins: [ [Function], [Function], [Processor] ] } },
       { options: { sourceMap: true }, loader: 'less-loader' } ] },
  { test: /\.sass$/,
    use:
     [ { loader: 'vue-style-loader', options: { sourceMap: true } },
       { loader: 'css-loader',
         options:
          { sourceMap: true,
            minimize: false,
            importLoaders: 2,
            alias:
             { '/assets': '/Users/tony/Documents/Github/website/assets',
               '/static': '/Users/tony/Documents/Github/website/static' } } },
       { loader: 'postcss-loader',
         options:
          { sourceMap: true,
            useConfigFile: false,
            plugins: [ [Function], [Function], [Processor] ] } },
       { options: { indentedSyntax: true }, loader: 'sass-loader' } ] },
  { test: /\.scss$/,
    use:
     [ { loader: 'vue-style-loader', options: { sourceMap: true } },
       { loader: 'css-loader',
         options:
          { sourceMap: true,
            minimize: false,
            importLoaders: 2,
            alias:
             { '/assets': '/Users/tony/Documents/Github/website/assets',
               '/static': '/Users/tony/Documents/Github/website/static' } } },
       { loader: 'postcss-loader',
         options:
          { sourceMap: true,
            useConfigFile: false,
            plugins: [ [Function], [Function], [Processor] ] } },
       { options: { sourceMap: true }, loader: 'sass-loader' } ] },
  { test: /\.styl(us)?$/,
    use:
     [ { loader: 'vue-style-loader', options: { sourceMap: true } },
       { loader: 'css-loader',
         options:
          { sourceMap: true,
            minimize: false,
            importLoaders: 2,
            alias:
             { '/assets': '/Users/tony/Documents/Github/website/assets',
               '/static': '/Users/tony/Documents/Github/website/static' } } },
       { loader: 'postcss-loader',
         options:
          { sourceMap: true,
            useConfigFile: false,
            plugins: [ [Function], [Function], [Processor] ] } },
       { options: { sourceMap: true }, loader: 'stylus-loader' } ] },
  { test: /\.(png|jpe?g|gif|svg)$/,
    loader: 'url-loader',
    options: { limit: 1000, name: 'img/[name].[hash:7].[ext]' } },
  { test: /\.(woff2?|eot|ttf|otf)(\?.*)?$/,
    loader: 'url-loader',
    options: { limit: 1000, name: 'fonts/[name].[hash:7].[ext]' } },
  { test: /\.(webm|mp4)$/,
    loader: 'file-loader',
    options: { name: 'videos/[name].[hash:7].[ext]' } } ]
