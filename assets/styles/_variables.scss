



/**
 * Colors
 */

/**
 * Returns the different lightness and saturations of a color
 * @param  {Color} $color
 * @return {Map}
 */
 @function getvariants($color) {
  @return (
    'base':   $color,
    'light':    adjust-color($color, $lightness: 10,  $saturation: 10),
    'lighter':  adjust-color($color, $lightness: 21,  $saturation: 22),
    'lightest': adjust-color($color, $lightness: 36,  $saturation: 32),
    'dark':     adjust-color($color, $lightness: -10, $saturation: 10),
    'darker':   change-color($color, $lightness: 20,   $saturation: 25),
    'darkest':  change-color($color, $lightness: 15,   $saturation: 16),
  );
}

/**
 * Some browsers supposedly mess up with transparent so rgba(black, 0)
 * is used instead.
 */

$transparent: rgba(black, 0);

$blue: hsl(210, 82%, 59%);
$green: hsl(160, 100%, 37%);
$copper: hsl(15, 84%, 55%);

// Primary colors
$color-primary: hsl(48, 100%, 58%);
$color-primary: hsl(45, 80%, 54%);
$color-primary--light: #9c957e;
$color-primary-darker: #383632;

// Secondary colors
$color-secondary: #4d5366; // hsla(226,14%,35%,1); // dark blue
$color-secondary: $green;

// Accent colors
$base-border-color: #44413a;

// Foreground colors
$color-foreground: #444444;
$color-foreground-alternate: #bdbdbd;
$color-foreground--meta: #989b9e;

// Background colors
$color-background: #3a2f3a;
$color-background--dark: #2b292b;


$color-grayscale: (
  'light': #f0f0f0,
  'base':  #eeeeee,
  'dark':  #dddddd,
);

$brand-colors: (
  'node': (
    'foreground': #669f64,
    'background': #333333,
  ),
  'javascript': (
    'foreground': #323330,
    'background': #f0db4f,
  ),
  'sass': (
    'foreground': #cc6699,
  ),
  'twitter': (
    'foreground': #1da1f2,
    'background': #1da1f2,
  ),
  'facebook': (
    'foreground': #3b5999,
    'background': #3b5999,
  )
);

$colors: (
  'primary': getvariants($color-primary),
  'secondary': getvariants($color-secondary),
  'foreground': (
    'lightest':  #e6ecef,
    'lighter':   #868a8c,
    'light':     #737f86,
    'base':      $color-foreground,
    'dark':      #202020,
    'alternate': $color-foreground-alternate,
  ),
  'background': (
    'light': hsl(hue($color-primary), 7%, 96%),
    'base': $color-background,
    'dark': $color-background--dark,
    'darkest': #202020,
  ),
  'success': getvariants($green),
  // 'warning': getvariants($orange),
  // 'danger': getvariants($red),
  'link': (
    'base': #6196cc,
    'hover': hsl(225, 34%, 40%),
    // 'hover': #8fb5d8,
  ),
);






$app-overlay-layer: 10;

$config: (
  'images': '/assets/images/'
);

$z-indexes: (
  'below': -1,
  'default': 1,
  'above': 2,
  'header': 10,
  'overlay': 5000,
  'modal': 5001,
);

// $ionicons-font-path: '../fonts/ionicons-2.0.1' !default;

/**
 * The base bottom spacing
 * @type {number}
 */
$base-spacing: 2rem;

/**
 * The base gutter width
 * @type {number}
 */
$base-gutter: 2rem;

/**
 * The gutter for the row classes
 * @type {number}
 */
$row-gutter: 1.25rem;

/**
 * The left padding for the blockquote
 */
$block-quote-padding-h: ($base-gutter * 3);

/**
 * The base border radius
 * @type {number}
 */
$base-border-radius: 3px;

/**
 * The base transition time to be used for hover states
 */
$base-transition-duration: 0.3s;

/**
 * The header color for the background of post headers
 */
$post-header-background: $color-secondary;

/**
 * Variables for lists
 */
$list-item-margin-h: ($base-gutter * 1.25);
$list-item-padding-h: quarter($base-gutter);
$list-padding-v: $base-spacing;

/**
 * The height of the header when
 */
$site-header-height--post: rem(400px);





/**
 * file: _typography.scss
 */

/**
 * Defines font sizes for helper classes.
 * They may also be accesed through the util function 'fontsize'
 */
 $font-sizes: (
  'xsmall': rem(11px),
  'small': rem(14px),
  'medium': rem(15px),
  'normal': rem(17px),
  'large': rem(20px),
  'xlarge': rem(28px),
);

/**
 * The base font size for the html
 */
$base-font-size: 100%;

/**
 * The base font size as pixels
 */
$base-font-size-px: 16px;

/**
 * The base font size as pixels
 */
$base-font-size-rem: rem($base-font-size-px);

/**
 * Variable for modular scale (unused atm)
 */
$base-size: rem(10px);

/**
 * Variable for modular scale
 */
$ratio: $golden;

/**
 * The base font weight for the body
 */
$base-font-weight: 400;

/**
 * The base line height for the body
 */
$base-line-height: 1.7;

/**
 * The base paragraph font size
 */
$paragraph-font-size: rem(17px);

/**
 * Used for bottom spacing for paragraphs and other elements
 */
$paragraph-spacing: ($base-spacing * 1.25);

/**
 * The font family for the body
 */
$base-font-family: Source Sans Pro, Arial;

/**
 * The font family for the headings
 */
$heading-font-family: 'Lato', Arial, sans-serif;

/**
 * Font family for code blocks
 * @type {[type]}
 */
$code-font-family: Source Code Pro, Menlo, Monaco, Consolas, 'Courier New', monospace;

/**
 * The tag names of headings
 */
$headings: (h1, h2, h3, h4, h5, h6);









/**
 * z-index layers
 */

 $z-layer-below: -1;

 $z-layer1:   100;
 $z-layer2:   200;
 $z-layer3:   300;
 $z-layer4:   400;
 $z-layer5:   500;
 $z-layer6:   600;
 $z-layer7:   700;
 $z-layer8:   800;
 $z-layer9:   900;
 $z-layer10: 1000;







//
// Declare them from largest to smallest so that when looping over
// them to create the responsive classes, the smaller classes
// override the larger classes
//
$app-breakpoints: (
  'default': 0,
  'xsm': rem(360px),
  'sm': rem(600px),
  'readable': rem(760px),
  'lg': rem(900px),
  'xlg': rem(1200px),
  'xxlg': rem(1400px),
);

//
// These classes will be used for the responsive @ classes.
// @type {list}
//
$app-breakpoint-classes: ('default', 'xxlg', 'xlg', 'lg', 'sm', 'xsm');

$app-active-breakpoints: ();

@each $breakpoint-name, $size in $app-breakpoints {
  @if index($app-breakpoint-classes, $breakpoint-name) {
    $app-active-breakpoints: map-merge($app-active-breakpoints, ($breakpoint-name: $size)) !global;
  }
}

// ("default": 0, "xsm": 22.5rem, "sm": 37.5rem, "lg": 56.25rem, "xl": 75rem)
// @error $app-active-breakpoints;

$app-grid-sizes: (12);
$app-spacing: 20px;
$app-gutter: 20px;

$app-utility-levels: (
  // Don't put 0, because those are output manually
  auto: auto,
  1: rem(quarter($app-spacing)),
  2: rem(half($app-spacing)),
  3: rem($app-spacing),
  4: rem($app-spacing * 1.5),
  5: rem($app-spacing * 2),
  6: rem($app-spacing * 2.5),
  7: rem($app-spacing * 3),
  8: rem($app-spacing * 6),
);

$app-utility-positions: (
  t: (top),
  b: (bottom),
  l: (left),
  r: (right),
  x: (left, right),
  y: (top, bottom),
  '': (top, right, bottom, left)
);

$app-project-preview-border-radius: 3px;
$app-site-header-lower: 1;
$app-site-header-container: 2;
