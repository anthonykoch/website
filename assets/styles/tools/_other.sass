
/**
 * Returns a color from the colors map
 * DEPRECATE
 * @type {Color}
 */
@function color($key: 'primary', $variant: 'base')
  $color: null
  $color-spectrum: map-get($colors, $key)

  @if $color-spectrum
    $color: map-get($color-spectrum, $variant)

  @return $color



/**
 * Returns a brand color
 * DEPRECATE
 * @return {Color}
 */
@function brand($brand-name, $variant)
  @if not map-has-key($brand-colors, $brand-name)
    @error 'function.brand: no color map found for brand name #{$brand-name}'

  $brand-colors: map-get($brand-colors, $brand-name)

  @if not map-has-key($brand-colors, $variant)
    @error 'function.brand: no color found for brand name #{$brand-name}'

  @return map-get($brand-colors, $variant)






@function zindex($key)
  @return map-get($z-indexes, $key)

/**
 * Returns an image prefixed with a path. This does not smartly join the paths,
 * it only concatenates the two parts together.
 *
 * Note: The path in $config should end with a forward slash, e.g. '../images/'
 *
 * @param  {String} $url
 * @return {String} The image prefixed with the path
 */
@function image($url)
  @return map-get($config, 'images') + $url

/**
 * Returns a multiple of the base spacing
 * @param  {Number} $multiplier
 * @return {Number}
 */
@function spacing($multiplier)
  @return $base-spacing * $multiplier



/**
 * Centers an element optionally verticall or horizontally
 * within its parent element.
 * @param string $which Maybe be 'vertical' or 'horizontal', defaults to both
 */
=center($which: null)
  position: absolute

  @if $which == 'vertical'
    top: 50%
    transform: translateY(-50%)

  @else if $which == 'horizontal'
    left: 50%
    transform: translateX(-50%)

  @else
    left: 50%
    top: 50%
    transform: translate(-50%, -50%)



/**
 * Gives scrollbar in webkit a style
 * TODO: Add options
 */
=scrollbar($width: 9px, $height: 9px)
  &::-webkit-scrollbar
    height: $height
    width: $width

  &::-webkit-scrollbar-track
    background-color: #dddddd

  &::-webkit-scrollbar-thumb
    background-color: #888888



//
// Causes an element to fill its parent's contianer using absolute positioning
//
=absolute-fill
  +position(absolute, 0 null null 0)
  +size(100%)
