/**
 * Contains various utility classes
 * file: _helpers.sass
 */

.u-border0
  border: 0 !important

.u-lineHeight0
  line-height: 0 !important

.u-lineHeightInherit
  line-height: inherit !important





/**
 * When applied to an element that has the same height and width,
 * it will make the element display into the shape of a circle.
 */
.u-circlify
  border-radius: 100% !important



.u-floatRight
  float: right !important

.u-floatLeft
  float: left !important

.u-clear
  clear: both !important

.u-clearfix
  +clearfix






.u-relative
  position: relative !important

.u-fixed
  position: fixed !important

.u-absolute
  position: absolute !important

.u-fillAbsolute
  height: 100% !important
  left: 0 !important
  position: absolute !important
  top: 0 !important
  width: 100% !important

.u-centerAbsolute
  left: 50% !important
  position: absolute !important
  top: -50% !important
  transform: translate(-50%, -50%) !important





.u-alignMiddle
  vertical-align: middle !important

.u-alignBaseline
  vertical-align: baseline !important

.u-alignTop
  vertical-align: top !important

.u-alignBottom
  vertical-align: bottom !important





@each $breakpoint-name in map-keys($app-active-breakpoints)
  +app-breakpoint-min($breakpoint-name)
    $suffix: app-breakpoint-suffix($breakpoint-name)

    .u-justifyCenter#{$suffix}
      justify-content: center !important

    .u-justifyStart#{$suffix}
      justify-content: flex-start !important

    .u-justifyEnd#{$suffix}
      justify-content: flex-end !important

    .u-justifyAround#{$suffix}
      justify-content: space-around !important

    .u-justifyBetween#{$suffix}
      justify-content: space-between !important

    .u-itemsStart#{$suffix}
      align-items: flex-start !important

    .u-itemsCenter#{$suffix}
      align-items: center !important

    .u-itemsEnd#{$suffix}
      align-items: flex-end !important

    .u-itemsAround#{$suffix}
      align-items: space-around !important

    .u-itemsBetween#{$suffix}
      align-items: space-between !important

    .u-itemsBaseline#{$suffix}
      align-items: baseline !important





    // u-flex should go before u-flexNoWrap so that u-flexNoWrap can override
    .u-flex#{$suffix}
      display: flex !important
      flex-wrap: wrap !important

    .u-flexColumn#{$suffix}
      display: flex !important
      flex-direction: column !important

    .u-flexRow#{$suffix}
      display: flex !important
      flex-direction: row !important

    .u-flexNowrap#{$suffix}
      flex-wrap: nowrap !important

    .u-flexWrap#{$suffix}
      flex-wrap: wrap !important

    .u-flexInline#{$suffix}
      display: inline-flex !important

    .u-inline#{$suffix}
      display: inline !important

    /**
     * From SUIT
     *
     * 1. Fix for Firefox bug: an image styled `max-width:100%` within an
     * inline-block will display at its default size, and not limit its width to
     * 100% of an ancestral container.
     */

    .u-inline-block#{$suffix}
      display: inline-block !important
      max-width: 100% !important // [1]

    .u-block#{$suffix}
      display: block !important

    .u-hidden#{$suffix}
      display: none !important

    .u-invisible#{$suffix}
      visibility: hidden !important

    @each $index in (1, 2)
      .u-order#{$index}#{$suffix}
        order: $index !important

    @each $index in (1,2,3,4,5)
      .u-flex#{$index}#{$suffix}
        flex: $index !important
